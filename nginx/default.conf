# Redirect all HTTP traffic to HTTPS
server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

# Main server block for HTTPS
server {
    listen 443 ssl http2;
    server_name _;

    # SSL/TLS certificate configuration
    ssl_certificate /etc/nginx/cert.pem;
    ssl_certificate_key /etc/nginx/key.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';

    keepalive_timeout 60;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:10m;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;

        add_header 'Access-Control-Allow-Origin' 'http://localhost:8080' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # WebSocket location for existing functionality (e.g., game)
    # location ~* ^/ws/ {
    #     proxy_pass http://127.0.0.1:8000;  # Pass WebSocket requests to Django app
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_set_header Host $host;
    # }

    # WebSocket location for chat system (uncomment if applicable)
    # location ~* ^/chat/ {
    #     proxy_pass http://127.0.0.1:8000;  # Pass WebSocket requests to Django app
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_set_header Host $host;
    # }

    # Custom error pages
    error_page 500 502 503 504 /500.html;  # Specify error pages for specific HTTP error codes
    location = /500.html {
        root /usr/share/nginx/html;  # Specify the root directory for error pages
    }

    # Enable HSTS to enforce HTTPS (for production)
    # add_header Strict-Transport-Security "max-age=63072000" always;

    # Enable server tokens for testing and debugging
    server_tokens on;
}
